/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_form_init_custom_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/form/init-custom-select */ "./js/modules/form/init-custom-select.js");
/* harmony import */ var _modules_form_init_form_validate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/form/init-form-validate */ "./js/modules/form/init-form-validate.js");
/* harmony import */ var _modules_init_slider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/init-slider */ "./js/modules/init-slider.js");
/* harmony import */ var _modules_init_sort_box__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/init-sort-box */ "./js/modules/init-sort-box.js");
/* harmony import */ var _modules_init_filter_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/init-filter-sort */ "./js/modules/init-filter-sort.js");
/* harmony import */ var _modules_init_busket_listeners__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/init-busket-listeners */ "./js/modules/init-busket-listeners.js");
/* harmony import */ var _modules_init_swipes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/init-swipes */ "./js/modules/init-swipes.js");








 // ---------------------------------

window.addEventListener("DOMContentLoaded", function () {
  // Utils
  // ---------------------------------
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener("load", function () {
    Object(_modules_init_swipes__WEBPACK_IMPORTED_MODULE_8__["initSwipe"])();
    Object(_modules_init_busket_listeners__WEBPACK_IMPORTED_MODULE_7__["busketListeners"])();
    Object(_modules_init_filter_sort__WEBPACK_IMPORTED_MODULE_6__["initFilterSort"])();
    Object(_modules_init_sort_box__WEBPACK_IMPORTED_MODULE_5__["initSortBox"])();
    Object(_modules_init_slider__WEBPACK_IMPORTED_MODULE_4__["initSliderMain"])();
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_form_init_custom_select__WEBPACK_IMPORTED_MODULE_2__["initCustomSelect"])();
    Object(_modules_form_init_form_validate__WEBPACK_IMPORTED_MODULE_3__["initFormValidate"])();
  });
}); // ---------------------------------
// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.
// привязывайте js не на классы, а на дата атрибуты (data-validate)
// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅
// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.
// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// используйте .closest(el)

/***/ }),

/***/ "./js/modules/form/custom-select.js":
/*!******************************************!*\
  !*** ./js/modules/form/custom-select.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CustomSelect; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// Функции создания разметки и рендера нативного селекта
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};

var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';

  switch (place) {
    case 'prepend':
      container.prepend(component);
      break;

    case 'afterend':
      container.after(component);
      break;

    case 'beforeend':
      container.append(component);
      break;
  }
};

var createNativeOptionsMarkup = function createNativeOptionsMarkup(items, activeIndex) {
  return items.map(function (el, index) {
    if (activeIndex.length) {
      var currentIndex = activeIndex.find(function (item) {
        return item === index;
      });

      if (currentIndex === index) {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', " selected>").concat(el.text ? "".concat(el.text) : '', "</option>");
      } else {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
      }
    } else {
      return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
    }
  }).join('\n');
};

var createNativeSelectMarkup = function createNativeSelectMarkup(_ref) {
  var id = _ref.id,
      items = _ref.items,
      multiple = _ref.multiple,
      name = _ref.name,
      required = _ref.required,
      _ref$activeIndex = _ref.activeIndex,
      activeIndex = _ref$activeIndex === void 0 ? [] : _ref$activeIndex;
  return "<select ".concat(id ? "id='".concat(id, "'") : '', " ").concat(name ? "name='".concat(name, "'") : '', " ").concat(multiple ? 'multiple' : '', " ").concat(required ? 'required' : '', " tabindex=\"-1\" aria-hidden=\"true\">\n            <option value=\"\"></option>\n            ").concat(createNativeOptionsMarkup(items, activeIndex), "\n          </select>");
}; // Функция расстановки активных состояний у li по умолчанию


var setActiveState = function setActiveState(multiple, selectItems) {
  var flag = true;
  var activeIndex = [];
  selectItems.forEach(function (item, index) {
    if (multiple) {
      if (item.getAttribute('aria-selected') === 'true') {
        activeIndex.push(index);
      }
    } else {
      if (item.getAttribute('aria-selected') === 'true' && flag) {
        activeIndex.push(index);
        flag = false;
      } else {
        item.setAttribute('aria-selected', 'false');
      }
    }
  });
  return activeIndex;
}; // Формирование строки для мультиселекта


var createMultiString = function createMultiString(arr) {
  var str = '';

  if (arr.length) {
    if (arr.length === 1) {
      str = arr[0].innerHTML;
    } else {
      arr.forEach(function (el, index) {
        if (index === arr.length - 1) {
          str += el.innerHTML;
        } else {
          str += "".concat(el.innerHTML, ", ");
        }
      });
    }
  }

  return str;
}; // Функция расстановки активных состояний у li по умолчанию


var setSelectActiveState = function setSelectActiveState(multiple, insert, item) {
  var buttonTextBlock = item.querySelector('.custom-select__text');
  var activeItems = item.querySelectorAll('.custom-select__item[aria-selected="true"]');
  var label = item.querySelector('.custom-select__label');
  var str = createMultiString(activeItems);
  buttonTextBlock.style.transition = '0s';

  if (label) {
    label.style.transition = '0s';
  }

  setTimeout(function () {
    if (label) {
      label.style.transition = null;
    }

    buttonTextBlock.style.transition = null;
  }, 300);

  if (multiple && insert) {
    item.classList.add('not-empty');
    buttonTextBlock.innerHTML = str;
  } else if (multiple) {
    return;
  } else {
    item.classList.add('not-empty');
    buttonTextBlock.innerHTML = activeItems[0].innerHTML;
  }
}; // Функция создания структуры селекта, после создания селекта она сразу его рендерит


var createSelectStructure = function createSelectStructure(item) {
  var options = {};
  options.items = [];
  var multiple = item.dataset.multiple;
  var id = item.dataset.id;
  var name = item.dataset.name;
  var required = item.dataset.required;
  var insert = item.dataset.insert;
  var selectItems = item.querySelectorAll('.custom-select__item');
  var activeIndex = setActiveState(multiple, selectItems);

  if (activeIndex.length) {
    options.activeIndex = activeIndex;
    setSelectActiveState(multiple, insert, item);
  }

  options.name = name || false;
  options.id = id || false;
  options.required = Boolean(required);
  options.multiple = Boolean(multiple);
  selectItems.forEach(function (selectItem) {
    var value = selectItem.dataset.selectValue;
    var itemInfo = {};
    itemInfo.text = selectItem.innerText;
    itemInfo.value = value;
    options.items.push(itemInfo);
  });
  renderElement(item, createElement(createNativeSelectMarkup(options)));
  return item;
}; // Закрытие селекта


var closeSelect = function closeSelect() {
  var activeSelect = document.querySelector('[data-select].is-open');
  document.removeEventListener('click', onDocumentClick);
  document.removeEventListener('keydown', onEscapePress);

  if (activeSelect) {
    activeSelect.classList.remove('is-open');
  }
}; // Действия при клике на элемент списка


var clickAction = function clickAction(el, index) {
  var parent = el.closest('.custom-select');
  var multiple = parent.dataset.multiple;
  var insert = parent.dataset.insert;
  var buttonTextBlock = parent.querySelector('.custom-select__text');
  var itemText = el.innerText;
  var options = parent.querySelectorAll('option');
  var select = parent.querySelector('select');
  var changeEv = new CustomEvent('change');
  var inputEv = new CustomEvent('input');
  select.dispatchEvent(changeEv);
  select.dispatchEvent(inputEv);
  var form = select.closest('form');

  if (form) {
    var formChangeEv = new CustomEvent('change');
    var formInputEv = new CustomEvent('input');
    form.dispatchEvent(formChangeEv);
    form.dispatchEvent(formInputEv);
  }

  if (multiple) {
    if (insert === 'true') {
      if (el.getAttribute('aria-selected') === 'true') {
        el.setAttribute('aria-selected', 'false');
        var activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');
        var str = createMultiString(activeItems);
        options[index + 1].selected = false;
        buttonTextBlock.innerText = str;

        if (!str) {
          parent.classList.remove('not-empty');
          parent.classList.remove('is-valid');
        }
      } else {
        el.setAttribute('aria-selected', 'true');

        var _activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');

        var _str = createMultiString(_activeItems);

        buttonTextBlock.innerText = _str;
        parent.classList.add('not-empty');
        parent.classList.add('is-valid');
        options[index + 1].selected = true;
      }
    } else {
      if (el.getAttribute('aria-selected') === 'true') {
        el.setAttribute('aria-selected', 'false');
        options[index + 1].selected = false;
      } else {
        el.setAttribute('aria-selected', 'true');
        options[index + 1].selected = true;
      }
    }
  } else {
    var activeItem = parent.querySelector('.custom-select__item[aria-selected="true"]');

    if (el.getAttribute('aria-selected') === 'true') {
      closeSelect();
    } else {
      if (activeItem) {
        activeItem.setAttribute('aria-selected', 'false');
        parent.classList.remove('not-empty');
        parent.classList.remove('is-valid');
      }

      buttonTextBlock.innerText = itemText;
      el.setAttribute('aria-selected', 'true');
      parent.classList.add('not-empty');
      parent.classList.add('is-valid');
      options[index + 1].selected = true;
      closeSelect();
    }
  }
}; // Обработчики событий


var onDocumentClick = function onDocumentClick(_ref2) {
  var target = _ref2.target;

  if (!target.closest('.custom-select')) {
    closeSelect();
  }
};

var onEscapePress = function onEscapePress(e) {
  var isEscape = e.key === 'Escape';

  if (isEscape) {
    closeSelect();
  }
};

var onItemClick = function onItemClick(el, index) {
  clickAction(el, index);
};

var onItemKeydown = function onItemKeydown(e, el, index) {
  var isEnter = e.key === 'Enter';

  if (isEnter) {
    clickAction(el, index);
  }
};

var onLastItemKeydown = function onLastItemKeydown(e) {
  var isTab = e.key === 'Tab';

  if (isTab) {
    closeSelect();
  }
};

var onSelectClick = function onSelectClick(e) {
  var parent = e.target.closest('[data-select]');
  var activeSelect = document.querySelector('[data-select].is-open');
  parent.classList.remove('is-invalid');

  if (activeSelect && activeSelect === parent) {
    activeSelect.classList.remove('is-open');
    return;
  }

  if (activeSelect) {
    closeSelect();
  }

  document.addEventListener('click', onDocumentClick);
  document.addEventListener('keydown', onEscapePress);

  if (parent.classList.contains('is-open')) {
    parent.classList.remove('is-open');
  } else {
    parent.classList.add('is-open');
  }
};

var onSelectKeydown = function onSelectKeydown(e) {
  var parent = e.target.closest('[data-select]');
  parent.classList.remove('is-invalid');

  if (e.shiftKey && e.key === 'Tab' && parent.closest('.is-open')) {
    closeSelect();
  }
}; // Все действия с селектом


var setSelectAction = function setSelectAction(item) {
  var customSelect = item;
  var button = customSelect.querySelector('.custom-select__button');
  var selectItems = customSelect.querySelectorAll('.custom-select__item');
  button.addEventListener('click', onSelectClick);
  button.addEventListener('keydown', onSelectKeydown);
  selectItems.forEach(function (el, index) {
    el.addEventListener('click', function () {
      onItemClick(el, index);
    });
    el.addEventListener('keydown', function (e) {
      onItemKeydown(e, el, index);
    });

    if (index === selectItems.length - 1) {
      el.addEventListener('keydown', onLastItemKeydown);
    }
  });
}; // Класс CustomSelect


var CustomSelect = /*#__PURE__*/function () {
  function CustomSelect() {
    _classCallCheck(this, CustomSelect);

    window.selectInit = this.init.bind(this);
  }

  _createClass(CustomSelect, [{
    key: "setAction",
    value: function setAction(item) {
      setSelectAction(item);
    }
  }, {
    key: "createSelect",
    value: function createSelect(item) {
      createSelectStructure(item);
      return item;
    }
  }, {
    key: "init",
    value: function init() {
      var _this = this;

      var selects = document.querySelectorAll('[data-select]');
      selects.forEach(function (select) {
        if (!select.classList.contains('is-initialized')) {
          var newSelect = _this.createSelect(select);

          _this.setAction(newSelect);

          select.classList.add('is-initialized');
        }
      });
    }
  }]);

  return CustomSelect;
}();



/***/ }),

/***/ "./js/modules/form/form-validate.js":
/*!******************************************!*\
  !*** ./js/modules/form/form-validate.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FormsValidate; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// Константы и переменные
var BASE_COUNTRY_CODE = '+7';
var BASE_MATRIX = '(___) ___ __ __';
var phoneLength = BASE_COUNTRY_CODE.length + BASE_MATRIX.length; // Ограничения ввода для обычных полей

var returnLimitationsRegEx = function returnLimitationsRegEx(dataLimitations) {
  switch (dataLimitations) {
    case 'digit':
      return /[^\d]/g;

    case 'name':
      return /[^a-zA-Zа-яёА-ЯЁ\-\s]/g;

    case 'letters':
      return /[^a-zA-Zа-яёА-ЯЁ\s]/g;

    case 'letters-and-digit':
      return /[^a-zA-Zа-яёА-ЯЁ\s\d]/g;

    case 'cyrillic':
      return /[^а-яёА-ЯЁ\s]/g;

    case 'latin':
      return /[^a-zA-Z\s]/g;

    default:
      return false;
  }
};

var simpleLimitations = function simpleLimitations(formElement, dataLimitations) {
  var RegEx = returnLimitationsRegEx(dataLimitations);

  if (RegEx) {
    formElement.addEventListener('input', function () {
      formElement.value = formElement.value.replace(RegEx, '');
    });
    return;
  } // eslint-disable-next-line no-console


  console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F: ".concat(dataLimitations, ", \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043E \u0441\u043F\u0435\u0446\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439."));
}; // Ограничения ввода для обычных полей с матрицей


var returnMatrixLimitationsRegEx = function returnMatrixLimitationsRegEx(dataMatrixLimitations) {
  switch (dataMatrixLimitations) {
    case 'digit':
      return /[^\d]/g;

    case 'name':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\-]]/g;

    case 'letters':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z]/g;

    case 'letters-and-digit':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\d]/g;

    case 'cyrillic':
      return /[^\а-яё\А-ЯЁ]/g;

    case 'latin':
      return /[^\a-z\A-Z]/g;

    default:
      return false;
  }
};

var initMatrixReplace = function initMatrixReplace(target, matrix, RegEx) {
  var def = matrix.replace(RegEx, '');
  var val = target.value.replace(RegEx, '');
  var i = 0;

  if (def.length >= val.length) {
    val = def;
  }

  target.value = matrix.replace(/./g, function (a) {
    if (/[_\^]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

var simpleMatrix = function simpleMatrix(formElement, dataMatrix, dataMatrixLimitations) {
  if (dataMatrixLimitations === null) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат ограничений: data-matrix-limitations=""');
    return;
  }

  var RegEx = returnMatrixLimitationsRegEx(dataMatrixLimitations);

  if (RegEx) {
    formElement.addEventListener('input', function () {
      initMatrixReplace(formElement, dataMatrix, RegEx);
    });
  } else {
    // eslint-disable-next-line no-console
    console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F: ".concat(dataMatrixLimitations, ", \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043E \u0441\u043F\u0435\u0446\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439."));
  }
}; // Маска для телефона


var onInputPhoneInput = function onInputPhoneInput(_ref) {
  var target = _ref.target;
  var matrix = "".concat(BASE_COUNTRY_CODE).concat(BASE_MATRIX);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = target.value.replace(/\D/g, '');

  if (def.length >= val.length) {
    val = def;
  }

  target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

var prettifyPhoneInput = function prettifyPhoneInput(input) {
  if (!input.value.startsWith(BASE_COUNTRY_CODE)) {
    if (input.value.startsWith('8')) {
      input.value = input.value.replace('8', BASE_COUNTRY_CODE);
    } else {
      input.value = "".concat(BASE_COUNTRY_CODE).concat(input.value);
    }
  } // onInputPhoneInput({input});


  var matrix = "".concat(BASE_COUNTRY_CODE).concat(BASE_MATRIX);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = input.value.replace(/\D/g, '');

  if (def.length >= val.length) {
    val = def;
  }

  input.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

var onFocusPhoneInput = function onFocusPhoneInput(_ref2) {
  var target = _ref2.target;

  if (!target.value) {
    target.value = BASE_COUNTRY_CODE;
  }

  target.addEventListener('input', onInputPhoneInput);
  target.addEventListener('blur', onBlurPhoneInput);
  target.addEventListener('keydown', onKeydownPhoneInput);
};

var onKeydownPhoneInput = function onKeydownPhoneInput(e) {
  if (e.target.selectionStart === 1 && e.keyCode === 8 || e.keyCode === 46) {
    e.preventDefault();
  }

  if (e.target.selectionStart <= phoneLength && e.keyCode !== 8 && e.keyCode !== 46 && e.keyCode !== 37 && e.keyCode !== 39) {
    e.target.setSelectionRange(phoneLength, phoneLength);
  }
};

var onBlurPhoneInput = function onBlurPhoneInput(_ref3) {
  var target = _ref3.target;

  if (target.value === BASE_COUNTRY_CODE) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onInputPhoneInput);
    target.removeEventListener('blur', onBlurPhoneInput);
  }
}; // Показ ошибок полей форм


var hideError = function hideError(el) {
  if (el.classList.contains('toggle-group')) {
    validateToggleGroup(el);
    el.setAttribute('aria-invalid', 'true');
    el.classList.remove('is-invalid');
    el.classList.add('is-valid');
  } else {
    var parent = el.closest('[data-validate-type]');
    el.setAttribute('aria-invalid', 'false');
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  }
};

var showError = function showError(el) {
  if (el.classList.contains('toggle-group')) {
    validateToggleGroup(el);
    el.setAttribute('aria-invalid', 'false');
    el.classList.add('is-invalid');
    el.classList.remove('is-valid');
  } else {
    var parent = el.closest('[data-validate-type]');
    el.setAttribute('aria-invalid', 'true');
    parent.classList.add('is-invalid');
    parent.classList.remove('is-valid');
  }
};

var showInputsError = function showInputsError(inputs) {
  var flag = true;
  var result = true;
  inputs.forEach(function (input) {
    var type = input.closest('[data-validate-type]').dataset.validateType;

    if (type === 'toggle-group') {
      return;
    }

    flag = validateInputs(type, input);

    if (!flag) {
      result = flag;
      showError(input);
    } else {
      hideError(input);
    }
  });
  return result;
};

var showGroupInputsError = function showGroupInputsError(parents) {
  var flag = true;
  var result = true;

  if (!parents.length) {
    return result;
  }

  parents.forEach(function (parent) {
    flag = validateToggleGroup(parent);

    if (!flag) {
      result = flag;
      showError(parent);
    } else {
      hideError(parent);
    }
  });
  return result;
};

var showErrors = function showErrors(inputs, parents) {
  var result = true;
  var inputsResult = showInputsError(inputs);
  var groupResult = showGroupInputsError(parents);

  if (!inputsResult || !groupResult) {
    result = false;
  }

  return result;
}; // Валидация полей форм


var validateTextInput = function validateTextInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var minLength = +input.getAttribute('minlength');

  if (!minLength) {
    minLength = 1;
  }

  if (input.value.length >= minLength) {
    parent.classList.add('is-valid');
    parent.classList.remove('is-invalid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var validatePhoneInput = function validatePhoneInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;

  if (input.value.length >= phoneLength) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var validateEmailInput = function validateEmailInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var emailString = /[a-zA-Zа-яёА-ЯЁ0-9]{1}([a-zA-Zа-яёА-ЯЁ0-9\-_\.]{1,})?@[a-zA-Zа-яёА-ЯЁ0-9\-]{1}([a-zA-Zа-яёА-ЯЁ0-9.\-]{1,})?[a-zA-Zа-яёА-ЯЁ0-9\-]{1}\.[a-zA-Zа-яёА-ЯЁ]{2,6}/;
  var regEmail = new RegExp(emailString, '');

  if (regEmail.test(input.value)) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var validateMatrixInput = function validateMatrixInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var matrix = input.closest('[data-matrix]').dataset.matrix;

  if (input.value.length === matrix.length) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var findSelectedOption = function findSelectedOption(options) {
  var flag = false;
  options.forEach(function (option) {
    if (option.value && option.selected) {
      flag = true;
    }
  });
  return flag;
};

var validateSelect = function validateSelect(input) {
  var parent = input.closest('[data-validate-type]');
  var options = input.querySelectorAll('option');
  var customSelectText = parent.querySelector('.custom-select__text');
  input.setAttribute('aria-invalid', 'false');
  var flag = true;

  if (findSelectedOption(options)) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    customSelectText.innerHTML = '';
    parent.classList.remove('not-empty');
    flag = false;
  }

  return flag;
};

var validateCheckbox = function validateCheckbox(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;

  if (input.checked) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  } else {
    parent.classList.remove('is-valid');
    flag = false;
  }

  return flag;
};

var validateInputs = function validateInputs(type, input) {
  switch (type) {
    case 'text':
      return validateTextInput(input);

    case 'phone':
      return validatePhoneInput(input);

    case 'email':
      return validateEmailInput(input);

    case 'matrix':
      return validateMatrixInput(input);

    case 'select':
      return validateSelect(input);

    case 'checkbox':
      return validateCheckbox(input);

    default:
      return false;
  }
};

var returnCheckedElements = function returnCheckedElements(inputs) {
  var flag = false;
  inputs.forEach(function (input) {
    if (input.checked) {
      flag = true;
    }
  });
  return flag;
};

var removeGroupAria = function removeGroupAria(inputs) {
  inputs.forEach(function (input) {
    if (!input.checked) {
      input.removeAttribute('aria-required');
      input.removeAttribute('aria-invalid');
    } else {
      input.setAttribute('aria-required', true);
      input.setAttribute('aria-invalid', false);
    }
  });
};

var setGroupAria = function setGroupAria(inputs) {
  inputs.forEach(function (input) {
    input.setAttribute('aria-required', true);
    input.setAttribute('aria-invalid', true);
  });
};

var validateToggleGroup = function validateToggleGroup(parent) {
  var formElements = parent.querySelectorAll('input');
  var flag = true;

  if (returnCheckedElements(formElements)) {
    removeGroupAria(formElements);
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  } else {
    setGroupAria(formElements);
    parent.classList.remove('is-valid');
    flag = false;
  }

  return flag;
};

var checkInputValidity = function checkInputValidity(type, input) {
  validateInputs(type, input);
}; // Установка всех действий в полях форм


var formElementLimitationsAction = function formElementLimitationsAction(formValidateElement) {
  var dataLimitations = formValidateElement.dataset.limitations ? formValidateElement.dataset.limitations : null;
  var formElement = formValidateElement.querySelector('input');

  if (!formElement) {
    formElement = formValidateElement.querySelector('textarea');
  }

  if (!formElement) {
    // eslint-disable-next-line no-console
    console.error('В валидируемом блоке отсутствует поле формы');
    return;
  }

  if (dataLimitations) {
    simpleLimitations(formElement, dataLimitations);
  }
};

var formElementMatrixAction = function formElementMatrixAction(formValidateElement) {
  var dataMatrix = formValidateElement.dataset.matrix ? formValidateElement.dataset.matrix : null;
  var dataMatrixLimitations = formValidateElement.dataset.matrixLimitations ? formValidateElement.dataset.matrixLimitations : null;
  var formElement = formValidateElement.querySelector('input');

  if (!formElement) {
    formElement = formValidateElement.querySelector('textarea');
  }

  if (!formElement) {
    // eslint-disable-next-line no-console
    console.error('В валидируемом блоке отсутствует поле формы');
    return;
  }

  if (dataMatrix) {
    simpleMatrix(formElement, dataMatrix, dataMatrixLimitations);
  }
};

var formElementValidateAction = function formElementValidateAction(formValidateElement) {
  var dataValidateType = formValidateElement.dataset.validateType;
  var dataLimitations = formValidateElement.dataset.limitations ? formValidateElement.dataset.limitations : null;
  var dataMatrix = formValidateElement.dataset.matrix ? formValidateElement.dataset.matrix : null;
  var dataMatrixLimitations = formValidateElement.dataset.matrixLimitations ? formValidateElement.dataset.matrixLimitations : null;

  if (dataValidateType !== 'toggle-group') {
    var formElement = formValidateElement.querySelector('input');

    if (!formElement) {
      formElement = formValidateElement.querySelector('textarea');
    }

    if (!formElement) {
      formElement = formValidateElement.querySelector('select');
    }

    if (!formElement) {
      // eslint-disable-next-line no-console
      console.error('В валидируемом блоке отсутствует поле формы');
      return;
    }

    formElement.setAttribute('aria-required', true);
    formElement.setAttribute('aria-invalid', true);

    if (dataLimitations) {
      simpleLimitations(formElement, dataLimitations);
    }

    if (dataMatrix) {
      simpleMatrix(formElement, dataMatrix, dataMatrixLimitations);
    }

    if (dataValidateType === 'phone') {
      if (formElement.value) {
        prettifyPhoneInput(formElement);
      }

      formElement.addEventListener('focus', onFocusPhoneInput);
    }

    formElement.addEventListener('input', function () {
      checkInputValidity(dataValidateType, formElement);
    });
    checkInputValidity(dataValidateType, formElement);
  } else {
    var formElements = formValidateElement.querySelectorAll('input');

    if (formElements.length) {
      formElements.forEach(function (el) {
        el.setAttribute('aria-required', true);
        el.setAttribute('aria-invalid', true);
        el.addEventListener('input', function () {
          validateToggleGroup(formValidateElement);
        });
      });
      validateToggleGroup(formValidateElement);
    } else {
      // eslint-disable-next-line no-console
      console.error('В валидируемом блоке отсутствуют поля формы');
      return;
    }
  }
}; // Обработка события submit на форме


var onFormSubmit = function onFormSubmit(e, callback) {
  var formElements = e.target.querySelectorAll('[aria-required="true"]');
  var groupsFormElement = e.target.querySelectorAll('[data-validate-type="toggle-group"]');

  if (showErrors(formElements, groupsFormElement) && callback && callback.validationSuccessCallback) {
    callback.validationSuccessCallback(e);
  } else if (callback && callback.validationErrorCallback) {
    callback.validationErrorCallback(e);
  } else {
    e.preventDefault();
  }
}; // Очистка полей формы


var clearForm = function clearForm(form) {
  form.reset();
  var formValidateElements = form.querySelectorAll('[data-validate-type]');
  var notEmptyInputs = form.querySelectorAll('.not-empty');
  var invalidInputs = form.querySelectorAll('.is-invalid');
  notEmptyInputs.forEach(function (notEmptyInput) {
    notEmptyInput.classList.remove('not-empty');
  });
  invalidInputs.forEach(function (invalidInput) {
    invalidInput.classList.remove('is-invalid');
  });
  formValidateElements.forEach(function (formValidateElement) {
    var dataValidateType = formValidateElement.dataset.validateType;

    if (dataValidateType !== 'toggle-group') {
      var formElement = formValidateElement.querySelector('input');

      if (!formElement) {
        formElement = formValidateElement.querySelector('textarea');
      }

      if (!formElement) {
        formElement = formValidateElement.querySelector('select');
      }

      if (!formElement) {
        // eslint-disable-next-line no-console
        console.error('В валидируемом блоке отсутствует поле формы');
        return;
      }

      formElement.value = '';
      checkInputValidity(dataValidateType, formElement);
    } else {
      validateToggleGroup(formValidateElement);
    }
  });
};

window.clearForm = clearForm; // Класс FormsValidate

var FormsValidate = /*#__PURE__*/function () {
  function FormsValidate(wrappers) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, FormsValidate);

    this.wrappers = wrappers;
    this.callback = callback;
  }

  _createClass(FormsValidate, [{
    key: "init",
    value: function init(formWrappers) {
      var _this = this;

      if (!formWrappers) {
        formWrappers = this.wrappers;
      }

      var typeOfNode = Object.prototype.toString.call(formWrappers);

      if (typeOfNode === '[object HTMLCollection]' || typeOfNode === '[object NodeList]' || typeOfNode === '[object Array]') {
        formWrappers.forEach(function (wrapper) {
          if (wrapper.classList.contains('is-initialized')) {
            // eslint-disable-next-line no-console
            console.error('На данной форме валидация уже инициализированна');
          } else {
            _this.initItem(wrapper);
          }
        });
      } else if (typeOfNode === '[object HTMLDivElement]' || typeOfNode === '[object HTMLElement]') {
        if (!formWrappers.classList.contains('is-initialized')) {
          this.initItem(formWrappers);
        }
      } else {
        // eslint-disable-next-line no-console
        console.error('Переданный обьект не соответствует формату');
        return;
      }
    }
  }, {
    key: "initItem",
    value: function initItem(element) {
      var _this2 = this;

      element.classList.add('is-initialized');
      var form = element.querySelector('form');
      var resetButtons = form.querySelectorAll('button[type="reset"], [data-reset]');
      form.noValidate = true;
      form.addEventListener('submit', function (e) {
        onFormSubmit(e, _this2.callback);
      });

      if (resetButtons.length) {
        resetButtons.forEach(function (btn) {
          btn.addEventListener('click', function (e) {
            e.preventDefault();
            clearForm(form);
          });
        });
      }

      var formValidateElements = form.querySelectorAll('[data-validate-type]');
      var formLimitationsElements = form.querySelectorAll('[data-limitations]:not([data-validate-type])');
      var formMatrixElements = form.querySelectorAll('[data-matrix]:not([data-validate-type])');

      if (formValidateElements.length) {
        formValidateElements.forEach(function (el) {
          formElementValidateAction(el);
        });
      }

      if (formLimitationsElements.length) {
        formLimitationsElements.forEach(function (el) {
          formElementLimitationsAction(el);
        });
      }

      if (formMatrixElements.length) {
        formMatrixElements.forEach(function (el) {
          formElementMatrixAction(el);
        });
      }
    }
  }]);

  return FormsValidate;
}();


window.FormsValidate = FormsValidate;

/***/ }),

/***/ "./js/modules/form/init-custom-select.js":
/*!***********************************************!*\
  !*** ./js/modules/form/init-custom-select.js ***!
  \***********************************************/
/*! exports provided: initCustomSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCustomSelect", function() { return initCustomSelect; });
/* harmony import */ var _custom_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./custom-select */ "./js/modules/form/custom-select.js");


var initCustomSelect = function initCustomSelect() {
  var customSelect = new _custom_select__WEBPACK_IMPORTED_MODULE_0__["default"]();
  customSelect.init();
};



/***/ }),

/***/ "./js/modules/form/init-form-validate.js":
/*!***********************************************!*\
  !*** ./js/modules/form/init-form-validate.js ***!
  \***********************************************/
/*! exports provided: initFormValidate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFormValidate", function() { return initFormValidate; });
/* harmony import */ var _form_validate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-validate */ "./js/modules/form/form-validate.js");

var formWrappers = document.querySelectorAll('[data-validate]');

var resetForm = function resetForm(form) {
  setTimeout(function () {
    window.clearForm(form);
  }, 1000);
};

var baseValidationSuccessCallback = function baseValidationSuccessCallback(e) {
  e.preventDefault(); // В данном колбеке бэкендер будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки при отправке

  resetForm(e.target);
};

var baseValidationErrorCallback = function baseValidationErrorCallback(e) {
  e.preventDefault();
};

var customExampleValidationSuccessCallback = function customExampleValidationSuccessCallback(e) {
  e.preventDefault(); // В данном колбеке бэкендер будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки при отправке

  resetForm(e.target); // eslint-disable-next-line no-console

  console.log('Ваша форма успешна отправлена');
};

var customExampleValidationErrorCallback = function customExampleValidationErrorCallback(e) {
  e.preventDefault(); // eslint-disable-next-line no-console

  console.error('Отправка формы невозможна, заполните все обязательные поля');
};

var callbacks = {
  base: {
    // Колбек при успешной валидации формы при попытке её отправки
    validationSuccessCallback: baseValidationSuccessCallback,
    // Колбек при не успешной валидации формы при попытке её отправки, не связан с запросами на сервер
    validationErrorCallback: baseValidationErrorCallback
  },
  customExample: {
    validationSuccessCallback: customExampleValidationSuccessCallback,
    validationErrorCallback: customExampleValidationErrorCallback
  }
};

var setCustomPhoneInputsEvent = function setCustomPhoneInputsEvent() {
  if (document.querySelectorAll('[data-validate-type="phone"] input').length) {
    document.querySelector('html').addEventListener('input', function (_ref) {
      var target = _ref.target;

      if (target.closest('[data-validate-type="phone"]')) {
        target.closest('[data-validate-type="phone"]').querySelector('input').dispatchEvent(new Event('input'));
      }
    });
  }
};

var initFormValidate = function initFormValidate() {
  if (formWrappers.length) {
    setCustomPhoneInputsEvent();
    formWrappers.forEach(function (wrapper) {
      var callback = wrapper.dataset.callback;

      if (!callback) {
        callback = 'base';
      }

      var formValidate = new _form_validate__WEBPACK_IMPORTED_MODULE_0__["default"](wrapper, callbacks[callback]);
      return formValidate.init();
    });
  }
};



/***/ }),

/***/ "./js/modules/init-busket-listeners.js":
/*!*********************************************!*\
  !*** ./js/modules/init-busket-listeners.js ***!
  \*********************************************/
/*! exports provided: busketListeners, itemsListeners */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "busketListeners", function() { return busketListeners; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "itemsListeners", function() { return itemsListeners; });
/* harmony import */ var _utils_create_busket_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/create-busket-item */ "./js/utils/create-busket-item.js");
/* harmony import */ var _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/items-utils */ "./js/utils/items-utils.js");


var itemsList = document.querySelectorAll(".catalog__item-form");
var busketList = document.querySelector(".busket__list");
var busketDelete = document.querySelectorAll(".busket__delete-item");
var busketClear = document.querySelector(".busket__clear");
var busketItemAdd = document.querySelectorAll(".busket__add");
var busketItemDecrease = document.querySelectorAll(".busket__delete");
var nameProductsCountList = ["товаров", "товар", "товара", "товара", "товара", "товаров", "товаров", "товаров", "товаров", "товаров"];

var clearBusket = function clearBusket() {
  var busketItemList = document.querySelectorAll(".busket__item");
  Array.from(busketItemList).map(function (item) {
    item.remove();
  });
  document.querySelector(".busket__products-count").textContent = "0";
  document.querySelector(".busket__summ-count").textContent = 0;
  document.querySelector(".header__busket-number").textContent = 0;
  document.querySelector(".busket__product-count-name").textContent = "товаров";
};

var itemsListeners = function itemsListeners(parent, list) {
  Array.from(list).map(function (item) {
    item.addEventListener("submit", function (e) {
      e.preventDefault();
      var formData = new FormData(item);
      var itemData = {
        picturePath: formData.get("picturePath"),
        pictureName: formData.get("pictureName"),
        pictureType: formData.get("pictureType"),
        pictureAlt: formData.get("pictureAlt"),
        name: formData.get("name"),
        price: formData.get("price"),
        type: formData.get("type"),
        date: formData.get("date"),
        popular: formData.get("popular"),
        id: formData.get("id")
      };
      var newElement = Object(_utils_create_busket_item__WEBPACK_IMPORTED_MODULE_0__["createBusketItem"])(itemData);
      var newBusketItemList = document.querySelectorAll(".busket__item");
      var newBusketItemListId = [];
      Array.from(newBusketItemList).map(function (item) {
        newBusketItemListId.push(+item.querySelector('input[name="id"]').value);
      });

      if (!newBusketItemListId.includes(+itemData.id)) {
        document.querySelector(".header__busket-number").textContent = +document.querySelector(".header__busket-number").textContent + 1;
        document.querySelector(".busket__products-count").textContent = +document.querySelector(".busket__products-count").textContent + 1;
        parent.appendChild(newElement);
        var newBusketItemAdd = newElement.querySelector(".busket__add");
        var newBusketItemDescrease = newElement.querySelector(".busket__delete");
        newBusketItemAdd.addEventListener("click", _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__["addItem"]);
        newBusketItemDescrease.addEventListener("click", _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__["decreaseItem"]);
        newElement.querySelector(".busket__delete-item").addEventListener("click", _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__["deleteItem"]);
      } else {
        document.getElementById(itemData.id).querySelector(".busket__product-count").textContent = +document.getElementById(itemData.id).querySelector(".busket__product-count").textContent + 1;
      }

      document.querySelector(".busket__summ-count").textContent = (+document.querySelector(".busket__summ-count").textContent.replace(/[^0-9]/g, "") + +itemData.price.replace(/[^0-9]/g, "")).toLocaleString("ru");
      var nameProductsCount = +document.querySelector(".busket__products-count").textContent[document.querySelector(".busket__products-count").textContent.length - 1];
      document.querySelector(".busket__product-count-name").textContent = nameProductsCountList[nameProductsCount];
    });
  });
};

var busketListeners = function busketListeners() {
  itemsListeners(busketList, itemsList);
  Array.from(busketDelete).map(function (item) {
    item.addEventListener("click", _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__["deleteItem"]);
  });
  Array.from(busketItemAdd).map(function (item) {
    item.addEventListener("click", _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__["addItem"]);
  });
  Array.from(busketItemDecrease).map(function (item) {
    item.addEventListener("click", _utils_items_utils__WEBPACK_IMPORTED_MODULE_1__["decreaseItem"]);
  });
  busketClear.addEventListener("click", clearBusket);
};



/***/ }),

/***/ "./js/modules/init-filter-sort.js":
/*!****************************************!*\
  !*** ./js/modules/init-filter-sort.js ***!
  \****************************************/
/*! exports provided: initFilterSort */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFilterSort", function() { return initFilterSort; });
/* harmony import */ var _utils_create_item__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/create-item */ "./js/utils/create-item.js");
/* harmony import */ var _utils_gather_form_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/gather-form-data */ "./js/utils/gather-form-data.js");
/* harmony import */ var _utils_filter_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/filter-sort */ "./js/utils/filter-sort.js");
/* harmony import */ var _init_busket_listeners__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init-busket-listeners */ "./js/modules/init-busket-listeners.js");
/* harmony import */ var _modals_init_modals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modals/init-modals */ "./js/modules/modals/init-modals.js");





var busketList = document.querySelector(".busket__list");
var filterForms = document.querySelectorAll(".filters__wrapper");
var sortButtons = document.querySelectorAll(".sort-wrapper__button");
var catalog = document.querySelector(".catalog");
var breakpointMob = window.matchMedia("(max-width:767px)");

var initFilterSort = function initFilterSort() {
  var productsList = document.querySelectorAll(".catalog__item-form");
  var productsData = [];
  var filterFormData = [];
  var sortValue = "expen";
  var desctopForm = document.querySelector(".filters .filters__wrapper");
  var mobForm = document.querySelector(".modal--mob-filter .filters__wrapper");
  Array.from(sortButtons).map(function (item) {
    item.addEventListener("click", function (e) {
      _modals_init_modals__WEBPACK_IMPORTED_MODULE_4__["modals"].close("modal-sort");
      Array.from(sortButtons).map(function (i) {
        i.classList.remove("active");
      });
      document.querySelector(".sorts span").textContent = e.target.textContent;
      e.target.classList.add("active");
      filterFormData = [];
      productsData = [];
      sortValue = e.target.value;

      if (!breakpointMob.matches) {
        Object(_utils_gather_form_data__WEBPACK_IMPORTED_MODULE_1__["createFormData"])(desctopForm, filterFormData);
      } else {
        Object(_utils_gather_form_data__WEBPACK_IMPORTED_MODULE_1__["createFormData"])(mobForm, filterFormData);
      }

      Object(_utils_gather_form_data__WEBPACK_IMPORTED_MODULE_1__["gatherFormData"])(productsList, productsData);
      catalog.innerHTML = "";
      catalog.appendChild(Object(_utils_create_item__WEBPACK_IMPORTED_MODULE_0__["createItem"])(Object(_utils_filter_sort__WEBPACK_IMPORTED_MODULE_2__["filterSort"])(productsData, filterFormData, sortValue)));
      var itemsList = document.querySelectorAll(".catalog__item-form");
      Object(_init_busket_listeners__WEBPACK_IMPORTED_MODULE_3__["itemsListeners"])(busketList, itemsList);
    });
  });
  Array.from(filterForms).map(function (item) {
    item.addEventListener("submit", function (e) {
      e.preventDefault();
      filterFormData = [];
      productsData = [];
      Object(_utils_gather_form_data__WEBPACK_IMPORTED_MODULE_1__["createFormData"])(item, filterFormData);
      Object(_utils_gather_form_data__WEBPACK_IMPORTED_MODULE_1__["gatherFormData"])(productsList, productsData);
      Object(_utils_filter_sort__WEBPACK_IMPORTED_MODULE_2__["filterSort"])(productsData, filterFormData);
      catalog.innerHTML = "";
      catalog.appendChild(Object(_utils_create_item__WEBPACK_IMPORTED_MODULE_0__["createItem"])(Object(_utils_filter_sort__WEBPACK_IMPORTED_MODULE_2__["filterSort"])(productsData, filterFormData, sortValue)));
      var itemsList = document.querySelectorAll(".catalog__item-form");
      Object(_init_busket_listeners__WEBPACK_IMPORTED_MODULE_3__["itemsListeners"])(busketList, itemsList);
    });
  });
};



/***/ }),

/***/ "./js/modules/init-slider.js":
/*!***********************************!*\
  !*** ./js/modules/init-slider.js ***!
  \***********************************/
/*! exports provided: initSliderMain */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSliderMain", function() { return initSliderMain; });
var sliderMain = document.querySelector(".swiper-block"); //const breakpointMob = window.matchMedia('(max-width:767px)');

var swiperMain;

var initMainSwiper = function initMainSwiper(slider, loop) {
  swiperMain = new Swiper(slider, {
    slidesPerView: 1,
    loop: loop,
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev"
    },
    pagination: {
      el: ".swiper-pagination",
      type: "bullets",
      clickable: true
    }
    /*     breakpoints: {
      320: {
        slidesPerView: 6,
        spaceBetween: 16,
      },
      768: {
        slidesPerView: 4,
        spaceBetween: 13,
      },
      960: {
        slidesPerView: 3,
        spaceBetween: 29,
      },
      1280: {
        slidesPerView: 4,
        spaceBetween: 32,
      },
      1440: {
        slidesPerView: 4,
        spaceBetween: 32,
      },
    },
    breakpointsBase: "container", */

  });
};

var initSliderMain = function initSliderMain() {
  initMainSwiper(sliderMain, false);
};



/***/ }),

/***/ "./js/modules/init-sort-box.js":
/*!*************************************!*\
  !*** ./js/modules/init-sort-box.js ***!
  \*************************************/
/*! exports provided: initSortBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSortBox", function() { return initSortBox; });
var breakpointMob = window.matchMedia("(max-width:767px)");

var initSort = function initSort() {
  var sortWrapper = document.querySelector(".modal--sort .modal__content");
  var buttonSort = document.querySelector(".sorts");
  buttonSort.addEventListener("click", function (e) {
    if (sortWrapper) {
      var coords = buttonSort.getBoundingClientRect();
      sortWrapper.style.left = coords.left - 130 + "px";
      sortWrapper.style.top = coords.bottom - 15 + "px";
    }
  });
};

var initSortBox = function initSortBox() {
  var breakpointChecker = function breakpointChecker() {
    if (!breakpointMob.matches) {
      initSort();
    }
  };

  breakpointMob.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/init-swipes.js":
/*!***********************************!*\
  !*** ./js/modules/init-swipes.js ***!
  \***********************************/
/*! exports provided: initSwipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSwipe", function() { return initSwipe; });
/* harmony import */ var _modals_init_modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals/init-modals */ "./js/modules/modals/init-modals.js");
 // элемент

var filterModal = document.querySelector(".modal--mob-filter .modal__content");
var sortModal = document.querySelector(".modal--sort .modal__content");

var initSwipe = function initSwipe() {
  var initialPoint;
  var finalPoint;
  filterModal.addEventListener("touchstart", function (event) {
    //event.preventDefault();
    //event.stopPropagation();
    initialPoint = event.changedTouches[0];
  }, false);
  filterModal.addEventListener("touchend", function (event) {
    //event.preventDefault();
    event.stopPropagation();
    finalPoint = event.changedTouches[0];
    var xAbs = Math.abs(initialPoint.pageX - finalPoint.pageX);
    var yAbs = Math.abs(initialPoint.pageY - finalPoint.pageY);

    if (xAbs > 20 || yAbs > 20) {
      if (xAbs > yAbs) {} else {
        if (finalPoint.pageY < initialPoint.pageY) {
          /*СВАЙП ВВЕРХ*/
        } else {
          if (filterModal) {
            _modals_init_modals__WEBPACK_IMPORTED_MODULE_0__["modals"].close("modal-mob-filter");
          }
        }
      }
    }
  }, false);
  sortModal.addEventListener("touchstart", function (event) {
    //event.preventDefault();
    //event.stopPropagation();
    initialPoint = event.changedTouches[0];
  }, false);
  sortModal.addEventListener("touchend", function (event) {
    //event.preventDefault();
    event.stopPropagation();
    finalPoint = event.changedTouches[0];
    var xAbs = Math.abs(initialPoint.pageX - finalPoint.pageX);
    var yAbs = Math.abs(initialPoint.pageY - finalPoint.pageY);

    if (xAbs > 20 || yAbs > 20) {
      if (xAbs > yAbs) {} else {
        if (finalPoint.pageY < initialPoint.pageY) {
          /*СВАЙП ВВЕРХ*/
        } else {
          if (sortModal) {
            _modals_init_modals__WEBPACK_IMPORTED_MODULE_0__["modals"].close("modal-sort");
          }
        }
      }
    }
  }, false);
};



/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals; // Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };
// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');

  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }

  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings); // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда

  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);

    this._init();
  }

  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;

      if (!this._settings[settingKey]) {
        return;
      }

      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;

      if (!this._modalName) {
        return;
      }

      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');

        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');

      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }

      this._setSettings(modalName);

      modal.classList.add('is-active');

      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }

      if (this._openCallback) {
        this._openCallback();
      }

      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }

      setTimeout(function () {
        _this._addListeners(modal);

        _this._autoPlay(modal);

        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }

      modal.classList.remove('is-active');

      this._removeListeners(modal);

      this._stopInteractive(modal);

      if (this._closeCallback) {
        this._closeCallback();
      }

      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);

      this._setSettings('default');

      this._enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/utils/create-busket-item.js":
/*!****************************************!*\
  !*** ./js/utils/create-busket-item.js ***!
  \****************************************/
/*! exports provided: createBusketItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createBusketItem", function() { return createBusketItem; });
var createBusketItem = function createBusketItem(item) {
  var newElem = document.createElement("li");
  newElem.classList.add("busket__item");
  newElem.setAttribute("id", item.id);
  var newWrapperPicText = document.createElement("div");
  newWrapperPicText.classList.add("busket__wrapper-pic-text");
  newElem.appendChild(newWrapperPicText);
  var newPicture = document.createElement("picture");
  newPicture.classList.add("busket__item-img");
  newWrapperPicText.appendChild(newPicture);
  var newSource = document.createElement("source");
  newSource.setAttribute("type", "image/webp");
  newSource.setAttribute("srcset", "".concat("img/" + item.picturePath + "/" + item.pictureName + ".webp" + ", " + "img/" + item.picturePath + "/" + item.pictureName + "@2x.webp" + " 2x"));
  newPicture.appendChild(newSource);
  var newImg = document.createElement("img");
  newImg.setAttribute("src", "".concat("img/" + item.picturePath + "/" + item.pictureName + "." + item.pictureType));
  newImg.setAttribute("srcset", "".concat("img/" + item.picturePath + "/" + item.pictureName + "@2x." + item.pictureType + " 2x"));
  newImg.setAttribute("width", 278);
  newImg.setAttribute("height", 278);
  newImg.setAttribute("alt", item.pictureAlt);
  newPicture.appendChild(newImg);
  var newNamePrice = document.createElement("div");
  newNamePrice.classList.add("busket__name-price");
  newWrapperPicText.appendChild(newNamePrice);
  var newElemName = document.createElement("span");
  newElemName.classList.add("busket__product-name");
  newElemName.textContent = item.name;
  newNamePrice.appendChild(newElemName);
  var newElemPrice = document.createElement("span");
  newElemPrice.classList.add("busket__price");
  newElemPrice.textContent = item.price + " ₽";
  newNamePrice.appendChild(newElemPrice);
  var newCounter = document.createElement("div");
  newCounter.classList.add("busket__counter");
  newElem.appendChild(newCounter);
  var newButtonDescrease = document.createElement("button");
  newButtonDescrease.classList.add("busket__delete");
  newButtonDescrease.setAttribute("type", "button");
  newButtonDescrease.setAttribute("aria-label", "уменьшить товар на 1");
  newCounter.appendChild(newButtonDescrease);
  newButtonDescrease.insertAdjacentHTML("afterbegin", "<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M3.3335 8H12.6668\" stroke=\"currentColor\" stroke-width=\"1.4\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    ");
  var newCounterSpan = document.createElement("span");
  newCounterSpan.classList.add("busket__product-count");
  newCounterSpan.textContent = 1;
  newCounter.appendChild(newCounterSpan);
  var newButtonAdd = document.createElement("button");
  newButtonAdd.classList.add("busket__add");
  newButtonAdd.setAttribute("type", "button");
  newButtonAdd.setAttribute("aria-label", "добавить товар");
  newCounter.appendChild(newButtonAdd);
  newButtonAdd.insertAdjacentHTML("afterbegin", "<svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M11 4.58337V17.4167\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    <path d=\"M4.58301 11H17.4163\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    ");
  var newButtonDelete = document.createElement("button");
  newButtonDelete.classList.add("busket__delete-item");
  newButtonDelete.setAttribute("type", "button");
  newButtonDelete.setAttribute("aria-label", "удалить товар");
  newElem.appendChild(newButtonDelete);
  newButtonDelete.insertAdjacentHTML("afterbegin", "<?xml version=\"1.0\" ?><svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style>.cls-1{fill:none;stroke:#000;stroke-linecap:round;stroke-linejoin:round;stroke-width:2px;}</style></defs><title/><g id=\"cross\"><line class=\"cls-1\" x1=\"7\" x2=\"25\" y1=\"7\" y2=\"25\"/><line class=\"cls-1\" x1=\"7\" x2=\"25\" y1=\"25\" y2=\"7\"/></g></svg>\n    ");
  var newInputPath = document.createElement("input");
  newInputPath.setAttribute("type", "hidden");
  newInputPath.setAttribute("name", "picturePath");
  newInputPath.setAttribute("value", item.picturePath);
  newElem.appendChild(newInputPath);
  var newInputpictureAlt = document.createElement("input");
  newInputpictureAlt.setAttribute("type", "hidden");
  newInputpictureAlt.setAttribute("name", "pictureAlt");
  newInputpictureAlt.setAttribute("value", item.pictureAlt);
  newElem.appendChild(newInputpictureAlt);
  var newInputpictureName = document.createElement("input");
  newInputpictureName.setAttribute("type", "hidden");
  newInputpictureName.setAttribute("name", "pictureName");
  newInputpictureName.setAttribute("value", item.pictureName);
  newElem.appendChild(newInputpictureName);
  var newInputpictureType = document.createElement("input");
  newInputpictureType.setAttribute("type", "hidden");
  newInputpictureType.setAttribute("name", "pictureType");
  newInputpictureType.setAttribute("value", item.pictureType);
  newElem.appendChild(newInputpictureType);
  var newInputName = document.createElement("input");
  newInputName.setAttribute("type", "hidden");
  newInputName.setAttribute("name", "name");
  newInputName.setAttribute("value", item.name);
  newElem.appendChild(newInputName);
  var newInputPrice = document.createElement("input");
  newInputPrice.setAttribute("type", "hidden");
  newInputPrice.setAttribute("name", "price");
  newInputPrice.setAttribute("value", item.price);
  newElem.appendChild(newInputPrice);
  var newInputType = document.createElement("input");
  newInputType.setAttribute("type", "hidden");
  newInputType.setAttribute("name", "type");
  newInputType.setAttribute("value", item.type);
  newElem.appendChild(newInputType);
  var newInputDate = document.createElement("input");
  newInputDate.setAttribute("type", "hidden");
  newInputDate.setAttribute("name", "date");
  newInputDate.setAttribute("value", item.date);
  newElem.appendChild(newInputDate);
  var newInputPopular = document.createElement("input");
  newInputPopular.setAttribute("type", "hidden");
  newInputPopular.setAttribute("name", "popular");
  newInputPopular.setAttribute("value", item.popular);
  newElem.appendChild(newInputPopular);
  var newInputId = document.createElement("input");
  newInputId.setAttribute("type", "hidden");
  newInputId.setAttribute("name", "id");
  newInputId.setAttribute("value", item.id);
  newElem.appendChild(newInputId);
  return newElem;
};



/***/ }),

/***/ "./js/utils/create-item.js":
/*!*********************************!*\
  !*** ./js/utils/create-item.js ***!
  \*********************************/
/*! exports provided: createItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createItem", function() { return createItem; });
var createItem = function createItem(initArray) {
  var newList = document.createElement("ul");
  newList.classList.add("catalog__list");
  initArray.map(function (item) {
    var newElem = document.createElement("li");
    newElem.classList.add("catalog__item");
    var newForm = document.createElement("form");
    newForm.classList.add("catalog__item-form");
    newElem.appendChild(newForm);
    var newPicture = document.createElement("picture");
    newPicture.classList.add("catalog__item-img");
    newForm.appendChild(newPicture);
    var newSource = document.createElement("source");
    newSource.setAttribute("type", "image/webp");
    newSource.setAttribute("srcset", "".concat("img/" + item.picturePath + "/" + item.pictureName + ".webp" + ", " + "img/" + item.picturePath + "/" + item.pictureName + "@2x.webp" + " 2x"));
    newPicture.appendChild(newSource);
    var newImg = document.createElement("img");
    newImg.setAttribute("src", "".concat("img/" + item.picturePath + "/" + item.pictureName + "." + item.pictureType));
    newImg.setAttribute("srcset", "".concat("img/" + item.picturePath + "/" + item.pictureName + "@2x." + item.pictureType + " 2x"));
    newImg.setAttribute("width", 278);
    newImg.setAttribute("height", 278);
    newImg.setAttribute("alt", item.pictureAlt);
    newPicture.appendChild(newImg);
    var newElemName = document.createElement("p");
    newElemName.classList.add("catalog__item-name");
    newElemName.textContent = item.name;
    newForm.appendChild(newElemName);
    var newElemPrice = document.createElement("span");
    newElemPrice.classList.add("catalog__item-price");
    newElemPrice.textContent = item.price + " ₽";
    newForm.appendChild(newElemPrice);
    var newElemButton = document.createElement("button");
    newElemButton.classList.add("catalog__add-item");
    newElemButton.setAttribute("type", "submit");
    newElemButton.setAttribute("aria-label", "добавить товар");
    newForm.appendChild(newElemButton);
    newElemButton.insertAdjacentHTML("afterbegin", "<svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M11 4.58337V17.4167\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  <path d=\"M4.58301 11H17.4163\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </svg>");
    var newInputPath = document.createElement("input");
    newInputPath.setAttribute("type", "hidden");
    newInputPath.setAttribute("name", "picturePath");
    newInputPath.setAttribute("value", item.picturePath);
    newForm.appendChild(newInputPath);
    var newInputpictureAlt = document.createElement("input");
    newInputpictureAlt.setAttribute("type", "hidden");
    newInputpictureAlt.setAttribute("name", "pictureAlt");
    newInputpictureAlt.setAttribute("value", item.pictureAlt);
    newForm.appendChild(newInputpictureAlt);
    var newInputpictureName = document.createElement("input");
    newInputpictureName.setAttribute("type", "hidden");
    newInputpictureName.setAttribute("name", "pictureName");
    newInputpictureName.setAttribute("value", item.pictureName);
    newForm.appendChild(newInputpictureName);
    var newInputpictureType = document.createElement("input");
    newInputpictureType.setAttribute("type", "hidden");
    newInputpictureType.setAttribute("name", "pictureType");
    newInputpictureType.setAttribute("value", item.pictureType);
    newForm.appendChild(newInputpictureType);
    var newInputName = document.createElement("input");
    newInputName.setAttribute("type", "hidden");
    newInputName.setAttribute("name", "name");
    newInputName.setAttribute("value", item.name);
    newForm.appendChild(newInputName);
    var newInputPrice = document.createElement("input");
    newInputPrice.setAttribute("type", "hidden");
    newInputPrice.setAttribute("name", "price");
    newInputPrice.setAttribute("value", item.price);
    newForm.appendChild(newInputPrice);
    var newInputType = document.createElement("input");
    newInputType.setAttribute("type", "hidden");
    newInputType.setAttribute("name", "type");
    newInputType.setAttribute("value", item.type);
    newForm.appendChild(newInputType);
    var newInputDate = document.createElement("input");
    newInputDate.setAttribute("type", "hidden");
    newInputDate.setAttribute("name", "date");
    newInputDate.setAttribute("value", item.date);
    newForm.appendChild(newInputDate);
    var newInputPopular = document.createElement("input");
    newInputPopular.setAttribute("type", "hidden");
    newInputPopular.setAttribute("name", "popular");
    newInputPopular.setAttribute("value", item.popular);
    newForm.appendChild(newInputPopular);
    newList.appendChild(newElem);
    var newInputId = document.createElement("input");
    newInputId.setAttribute("type", "hidden");
    newInputId.setAttribute("name", "id");
    newInputId.setAttribute("value", item.id);
    newForm.appendChild(newInputId);
    newList.appendChild(newElem);
  });
  return newList;
};



/***/ }),

/***/ "./js/utils/filter-sort.js":
/*!*********************************!*\
  !*** ./js/utils/filter-sort.js ***!
  \*********************************/
/*! exports provided: filterSort */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "filterSort", function() { return filterSort; });
/* harmony import */ var _sort_function_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sort-function-object */ "./js/utils/sort-function-object.js");


var filterSort = function filterSort(list, fromList, value) {
  return list.filter(function (i) {
    return fromList.every(function (k) {
      return i.type.split(" ").includes(k);
    });
  }).sort(_sort_function_object__WEBPACK_IMPORTED_MODULE_0__["sortFunctions"][value]);
};



/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ["a[href]", "area[href]", 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', "select:not([disabled]):not([aria-hidden])", "textarea:not([disabled]):not([aria-hidden])", "button:not([disabled]):not([aria-hidden])", "iframe", "object", "embed", "[contenteditable]", '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === "Tab") {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this._focusableElements.length === 1) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }

        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }
      }

      if (evt.key === "Tab" && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();

        this._focusableElements[0].focus();
      }

      if (evt.key === "Tab" && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();

        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);

      if (!lockedElement) {
        return;
      }

      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;

      var startElement = lockedElement.querySelector("[data-focus]") || this._focusableElements[0];

      if (this._endElement) {
        this._endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener("keydown", this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }

      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener("keydown", this._documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/gather-form-data.js":
/*!**************************************!*\
  !*** ./js/utils/gather-form-data.js ***!
  \**************************************/
/*! exports provided: gatherFormData, createFormData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gatherFormData", function() { return gatherFormData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFormData", function() { return createFormData; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var gatherFormData = function gatherFormData(list, finalList) {
  Array.from(list).map(function (item) {
    var formData = new FormData(item);
    var itemList = {
      picturePath: formData.get("picturePath"),
      pictureName: formData.get("pictureName"),
      pictureType: formData.get("pictureType"),
      pictureAlt: formData.get("pictureAlt"),
      name: formData.get("name"),
      price: formData.get("price"),
      type: formData.get("type"),
      date: formData.get("date"),
      popular: formData.get("popular"),
      id: formData.get("id")
    };
    finalList.push(itemList);
  });
};

var createFormData = function createFormData(form, newList) {
  var formData = new FormData(form);

  var _iterator = _createForOfIteratorHelper(formData.values()),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var i = _step.value;
      newList.push(i);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};



/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");


var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/items-utils.js":
/*!*********************************!*\
  !*** ./js/utils/items-utils.js ***!
  \*********************************/
/*! exports provided: deleteItem, decreaseItem, addItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteItem", function() { return deleteItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "decreaseItem", function() { return decreaseItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addItem", function() { return addItem; });
var nameProductsCountList = ["товаров", "товар", "товара", "товара", "товара", "товаров", "товаров", "товаров", "товаров", "товаров"];

var deleteItem = function deleteItem(e) {
  e.target.closest("li").remove();
  document.querySelector(".busket__products-count").textContent = +document.querySelector(".busket__products-count").textContent - 1;
  document.querySelector(".busket__summ-count").textContent = (+document.querySelector(".busket__summ-count").textContent.replace(/[^0-9]/g, "") - +e.target.closest("li").querySelector('input[name="price"').value.replace(/[^0-9]/g, "") * +e.target.closest("li").querySelector(".busket__product-count").textContent).toLocaleString("ru");
  document.querySelector(".header__busket-number").textContent = +document.querySelector(".header__busket-number").textContent - 1;
  var nameProductsCount = +document.querySelector(".busket__products-count").textContent[document.querySelector(".busket__products-count").textContent.length - 1];
  document.querySelector(".busket__product-count-name").textContent = nameProductsCountList[nameProductsCount];
};

var decreaseItem = function decreaseItem(e) {
  if (+e.target.closest("li").querySelector(".busket__product-count").textContent === 1) {
    e.target.closest("li").remove();
    document.querySelector(".header__busket-number").textContent = +document.querySelector(".header__busket-number").textContent - 1;
    document.querySelector(".busket__products-count").textContent = +document.querySelector(".busket__products-count").textContent - 1;
  } else {
    e.target.closest("li").querySelector(".busket__product-count").textContent = +e.target.closest("li").querySelector(".busket__product-count").textContent - 1;
  }

  document.querySelector(".busket__summ-count").textContent = (+document.querySelector(".busket__summ-count").textContent.replace(/[^0-9]/g, "") - +e.target.closest("li").querySelector('input[name="price"').value.replace(/[^0-9]/g, "")).toLocaleString("ru");
  var nameProductsCount = +document.querySelector(".busket__products-count").textContent[document.querySelector(".busket__products-count").textContent.length - 1];
  document.querySelector(".busket__product-count-name").textContent = nameProductsCountList[nameProductsCount];
};

var addItem = function addItem(e) {
  e.target.closest("li").querySelector(".busket__product-count").textContent = +e.target.closest("li").querySelector(".busket__product-count").textContent + 1;
  document.querySelector(".busket__summ-count").textContent = (+document.querySelector(".busket__summ-count").textContent.replace(/[^0-9]/g, "") + +e.target.closest("li").querySelector('input[name="price"').value.replace(/[^0-9]/g, "")).toLocaleString("ru");
  var nameProductsCount = +document.querySelector(".busket__products-count").textContent[document.querySelector(".busket__products-count").textContent.length - 1];
  document.querySelector(".busket__product-count-name").textContent = nameProductsCountList[nameProductsCount];
};



/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? "scroll-lock-ios" : "scroll-lock";
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll("[data-fix-block]");
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        //document.body.style.paddingRight = `${this._getScrollbarWidth()}px`;
        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.querySelector("html").classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.querySelector("html").classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll); //document.body.style.paddingRight = null;

      document.body.style.top = null;

      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });

      document.body.removeAttribute("data-scroll");
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ }),

/***/ "./js/utils/sort-function-object.js":
/*!******************************************!*\
  !*** ./js/utils/sort-function-object.js ***!
  \******************************************/
/*! exports provided: sortFunctions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortFunctions", function() { return sortFunctions; });
var sortFunctions = {
  expen: function expen(a, b) {
    return +b.price.replace(/[^0-9]/g, "") - +a.price.replace(/[^0-9]/g, "");
  },
  notexpen: function notexpen(a, b) {
    return +a.price.replace(/[^0-9]/g, "") - +b.price.replace(/[^0-9]/g, "");
  },
  popular: function popular(a, b) {
    return +b.popular - +a.popular;
  },
  new: function _new(a, b) {
    return new Date(b.date).getTime() - new Date(a.date).getTime();
  }
};


/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map